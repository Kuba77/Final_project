{"ast":null,"code":"var _jsxFileName = \"/home/tirion/Desktop/Final_project/client/src/components/form/RegistrationForm.jsx\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport FormikControl from './FormikControl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegistrationForm() {\n  const options = [{\n    key: 'Email',\n    value: 'emailmoc'\n  }, {\n    key: 'Telephone',\n    value: 'telephonemoc'\n  }];\n  const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    modeOfContact: '',\n    phone: ''\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email('Invalid email format').required('Required'),\n    password: Yup.string().required('Required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), ''], 'Passwords must match').required('Required'),\n    modeOfContact: Yup.string().required('Required'),\n    phone: Yup.string().when('modeOfContact', {\n      is: 'telephonemoc',\n      then: Yup.string().required('Required')\n    })\n  });\n\n  const onSubmit = values => {\n    console.log('Form data', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: formik => {\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormikControl, {\n          control: \"input\",\n          type: \"email\",\n          label: \"Email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n          control: \"input\",\n          type: \"password\",\n          label: \"Password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n          control: \"input\",\n          type: \"password\",\n          label: \"Confirm Password\",\n          name: \"confirmPassword\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n          control: \"radio\",\n          label: \"Mode of contact\",\n          name: \"modeOfContact\",\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n          control: \"input\",\n          type: \"text\",\n          label: \"Phone number\",\n          name: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !formik.isValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/components/form/RegistrationForm.jsx"],"names":["React","Formik","Form","Yup","FormikControl","RegistrationForm","options","key","value","initialValues","email","password","confirmPassword","modeOfContact","phone","validationSchema","object","string","required","oneOf","ref","when","is","then","onSubmit","values","console","log","formik","isValid"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup'\nimport FormikControl from './FormikControl'\n\nfunction RegistrationForm () {\n  const options = [\n    { key: 'Email', value: 'emailmoc' },\n    { key: 'Telephone', value: 'telephonemoc' }\n  ]\n  const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    modeOfContact: '',\n    phone: ''\n  }\n\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email('Invalid email format')\n      .required('Required'),\n    password: Yup.string().required('Required'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), ''], 'Passwords must match')\n      .required('Required'),\n    modeOfContact: Yup.string().required('Required'),\n    phone: Yup.string().when('modeOfContact', {\n      is: 'telephonemoc',\n      then: Yup.string().required('Required')\n    })\n  })\n\n  const onSubmit = values => {\n    console.log('Form data', values)\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {formik => {\n        return (\n          <Form>\n            <FormikControl\n              control='input'\n              type='email'\n              label='Email'\n              name='email'\n            />\n            <FormikControl\n              control='input'\n              type='password'\n              label='Password'\n              name='password'\n            />\n            <FormikControl\n              control='input'\n              type='password'\n              label='Confirm Password'\n              name='confirmPassword'\n            />\n            <FormikControl\n              control='radio'\n              label='Mode of contact'\n              name='modeOfContact'\n              options={options}\n            />\n            <FormikControl\n              control='input'\n              type='text'\n              label='Phone number'\n              name='phone'\n            />\n            <button type='submit' disabled={!formik.isValid}>\n              Submit\n            </button>\n          </Form>\n        )\n      }}\n    </Formik>\n  )\n}\n\nexport default RegistrationForm"]},"metadata":{},"sourceType":"module"}