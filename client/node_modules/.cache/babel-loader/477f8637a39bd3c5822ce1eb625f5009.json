{"ast":null,"code":"var _jsxFileName = \"/home/tirion/Desktop/Final_project/client/src/pages/reg-page/regPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { setCustomer, removeCustomer } from \"../../store/customer/reducer\";\nimport { setErors, clearErrors } from \"../../store/errors/reducer\";\nimport { logOrRegisterCustomer, registerCustomer } from \"../../api/userApi\";\nimport { GoogleLogin } from \"react-google-login\";\nimport configData from \"../../config/config.json\";\nimport { RegistrationSchema } from \"../../components/forms/components/formValidation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const singUp = useCallback(async value => {\n    try {\n      let newCustomer = await registerCustomer(value);\n\n      if (newCustomer.message) {\n        dispatch(setErors(newCustomer.message));\n      } else {\n        dispatch(setCustomer(newCustomer.data));\n        dispatch(clearErrors());\n      }\n    } catch (err) {\n      dispatch(setErors(err.response));\n    }\n  }, [dispatch]);\n  const responseSuccessGoogle = useCallback(async response => {\n    try {\n      let customer = await logOrRegisterCustomer(response);\n\n      if (customer.message) {\n        dispatch(setErors(customer.message));\n      } else {\n        dispatch(setCustomer(customer));\n      }\n    } catch (error) {\n      dispatch(setErors(error.response));\n    }\n  }, [dispatch]);\n  const responseErrorGoogle = useCallback(async response => {\n    dispatch(setErors(response.message));\n  }, [dispatch]);\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      login: \"\",\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: RegistrationSchema,\n    onSubmit: values => {\n      singUp(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" REGISTRATION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"firstName\",\n          name: \"firstName\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"lastName\",\n          name: \"lastName\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"login\",\n          children: \"WHAT to call you?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"login\",\n          name: \"login\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), formik.touched.login && formik.errors.login ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: configData.REACT_APP_GOOGLE_CLIENT_ID,\n      buttonText: \"Login\",\n      onSuccess: responseSuccessGoogle,\n      onFailure: responseErrorGoogle,\n      cookiePolicy: \"single_host_origin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        dispatch(removeCustomer());\n      },\n      children: \"LOGOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegPage, \"oHtX6FraE3dTXIBX1n0sQQwmpmY=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = RegPage;\nexport default RegPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegPage\");","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/pages/reg-page/regPage.jsx"],"names":["React","useCallback","useFormik","useDispatch","setCustomer","removeCustomer","setErors","clearErrors","logOrRegisterCustomer","registerCustomer","GoogleLogin","configData","RegistrationSchema","RegPage","dispatch","singUp","value","newCustomer","message","data","err","response","responseSuccessGoogle","customer","error","responseErrorGoogle","formik","initialValues","firstName","lastName","login","email","password","validationSchema","onSubmit","values","handleSubmit","handleChange","handleBlur","touched","errors","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { setCustomer, removeCustomer } from \"../../store/customer/reducer\";\nimport { setErors, clearErrors } from \"../../store/errors/reducer\";\nimport { logOrRegisterCustomer, registerCustomer } from \"../../api/userApi\";\nimport { GoogleLogin } from \"react-google-login\";\nimport configData from \"../../config/config.json\";\nimport { RegistrationSchema } from \"../../components/forms/components/formValidation\";\n\nconst RegPage = () => {\n  const dispatch = useDispatch();\n\n  const singUp = useCallback(\n    async (value) => {\n      try {\n        let newCustomer = await registerCustomer(value);\n        if (newCustomer.message) {\n          dispatch(setErors(newCustomer.message));\n        } else {\n          dispatch(setCustomer(newCustomer.data));\n          dispatch(clearErrors());\n        }\n      } catch (err) {\n        dispatch(setErors(err.response));\n      }\n    },\n    [dispatch]\n  );\n\n  const responseSuccessGoogle = useCallback(\n    async (response) => {\n      try {\n        let customer = await logOrRegisterCustomer(response);\n        if (customer.message) {\n          dispatch(setErors(customer.message));\n        } else {\n          dispatch(setCustomer(customer));\n        }\n      } catch (error) {\n        dispatch(setErors(error.response));\n      }\n    },\n    [dispatch]\n  );\n  const responseErrorGoogle = useCallback(\n    async (response) => {\n      dispatch(setErors(response.message));\n    },\n    [dispatch]\n  );\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      login: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    validationSchema: RegistrationSchema,\n    onSubmit: (values) => {\n      singUp(values);\n    },\n  });\n\n  return (\n    <div>\n      <h1> REGISTRATION</h1>\n      <div className=\"Form\">\n        <form onSubmit={formik.handleSubmit}>\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            id=\"firstName\"\n            name=\"firstName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.firstName}\n          />\n          {formik.touched.firstName && formik.errors.firstName ? (\n            <div>{formik.errors.firstName}</div>\n          ) : null}\n\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            id=\"lastName\"\n            name=\"lastName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.lastName}\n          />\n          {formik.touched.lastName && formik.errors.lastName ? (\n            <div>{formik.errors.lastName}</div>\n          ) : null}\n          <label htmlFor=\"login\">WHAT to call you?</label>\n          <input\n            id=\"login\"\n            name=\"login\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.login}\n          />\n          {formik.touched.login && formik.errors.login ? (\n            <div>{formik.errors.login}</div>\n          ) : null}\n\n          <label htmlFor=\"email\">Email Address</label>\n          <input\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email ? (\n            <div>{formik.errors.email}</div>\n          ) : null}\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n          {formik.touched.password && formik.errors.password ? (\n            <div>{formik.errors.password}</div>\n          ) : null}\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n      <GoogleLogin\n        clientId={configData.REACT_APP_GOOGLE_CLIENT_ID}\n        buttonText=\"Login\"\n        onSuccess={responseSuccessGoogle}\n        onFailure={responseErrorGoogle}\n        cookiePolicy={\"single_host_origin\"}\n      />\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          dispatch(removeCustomer());\n        }}\n      >\n        LOGOUT\n      </button>\n    </div>\n  );\n};\n\nexport default RegPage;\n"]},"metadata":{},"sourceType":"module"}