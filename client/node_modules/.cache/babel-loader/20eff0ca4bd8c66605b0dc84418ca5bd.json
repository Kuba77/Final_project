{"ast":null,"code":"var _jsxFileName = \"/home/tirion/Desktop/Final_project/client/src/pages/LoginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginCustomer } from \"../../api/userApi\";\nimport { setErors, clearErrors } from \"../../store/errors/reducer\";\nimport { setCustomer } from \"../../store/customer/reducer\";\nimport ValidationSchema from \"../../components/form/ValidationSchema\";\nimport LoginForm from \"../../components/form/LoginForm\";\nimport Header from \"../../components/Header/Header\";\nimport Footer from \"../../components/Footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n  const singIn = useCallback(async values => {\n    try {\n      let customer = await loginCustomer(values);\n\n      if (customer.email) {\n        dispatch(setErors(customer));\n      } else {\n        dispatch(setCustomer(customer));\n        dispatch(clearErrors());\n      }\n    } catch (error) {\n      dispatch(setErors(error.response));\n    }\n  }, [dispatch]);\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = ValidationSchema;\n\n  const onSubmit = values => {\n    singIn(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginPage, \"e6cC3CrFh7GZ6IApU+3VCz6GnY0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/pages/LoginPage/LoginPage.jsx"],"names":["React","useCallback","useDispatch","useSelector","loginCustomer","setErors","clearErrors","setCustomer","ValidationSchema","LoginForm","Header","Footer","LoginPage","dispatch","store","state","singIn","values","customer","email","error","response","initialValues","password","validationSchema","onSubmit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,4BAAtC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;;;AAIA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,KAAK,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAZ,CAAzB;AAEA,QAAMC,MAAM,GAAGf,WAAW,CACxB,MAAOgB,MAAP,IAAkB;AAChB,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMd,aAAa,CAACa,MAAD,CAAlC;;AACA,UAAIC,QAAQ,CAACC,KAAb,EAAoB;AAClBN,QAAAA,QAAQ,CAACR,QAAQ,CAACa,QAAD,CAAT,CAAR;AACD,OAFD,MAEO;AACLL,QAAAA,QAAQ,CAACN,WAAW,CAACW,QAAD,CAAZ,CAAR;AACAL,QAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD;AACF,KARD,CAQE,OAAOc,KAAP,EAAc;AACdP,MAAAA,QAAQ,CAACR,QAAQ,CAACe,KAAK,CAACC,QAAP,CAAT,CAAR;AACD;AACF,GAbuB,EAcxB,CAACR,QAAD,CAdwB,CAA1B;AAiBA,QAAMS,aAAa,GAAG;AACpBH,IAAAA,KAAK,EAAE,EADa;AAEpBI,IAAAA,QAAQ,EAAE;AAFU,GAAtB;AAIA,QAAMC,gBAAgB,GAAGhB,gBAAzB;;AAGA,QAAMiB,QAAQ,GAAGR,MAAM,IAAI;AACzBD,IAAAA,MAAM,CAACC,MAAD,CAAN;AACD,GAFD;;AAIA,sBAEE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEI,QAAC,SAAD;AAAW,MAAA,aAAa,EAAEK,aAA1B;AAAyC,MAAA,gBAAgB,EAAEE,gBAA3D;AAA6E,MAAA,QAAQ,EAAEC;AAAvF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YALL;AAAA,kBAFF;AAUD,CA1CD;;GAAMb,S;UACaV,W,EACHC,W;;;KAFVS,S;AA4CN,eAAeA,SAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginCustomer } from \"../../api/userApi\";\nimport { setErors, clearErrors } from \"../../store/errors/reducer\";\nimport { setCustomer } from \"../../store/customer/reducer\";\nimport ValidationSchema from \"../../components/form/ValidationSchema\";\nimport LoginForm from \"../../components/form/LoginForm\";\nimport Header from \"../../components/Header/Header\"\nimport Footer from \"../../components/Footer/Footer\";\n\n\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  const singIn = useCallback(\n    async (values) => {\n      try {\n        let customer = await loginCustomer(values);\n        if (customer.email) {\n          dispatch(setErors(customer));\n        } else {\n          dispatch(setCustomer(customer));\n          dispatch(clearErrors());\n        }\n      } catch (error) {\n        dispatch(setErors(error.response));\n      }\n    },\n    [dispatch]\n  );\n\n  const initialValues = {\n    email: '',\n    password: '',\n  }\n  const validationSchema = ValidationSchema;\n\n\n  const onSubmit = values => {\n    singIn(values);\n  }\n\n  return (\n  \n    <>\n      <Header />\n        <LoginForm initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} />\n        {/* <h2> Welcome back {customerName(store)}</h2>\n        <h2>{errorloginOrEmail(store)}</h2> */}\n         <Footer /> \n    </>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}