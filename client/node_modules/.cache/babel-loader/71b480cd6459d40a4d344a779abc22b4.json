{"ast":null,"code":"var _jsxFileName = \"/home/tirion/Desktop/Final_project/client/src/components/form/RegistrationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Formik, Form } from 'formik';\nimport FormikControl from './FormikControl';\nimport form from \"./form.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { setCustomer, removeCustomer } from \"../../store/customer/reducer\";\nimport { setErors, clearErrors } from \"../../store/errors/reducer\";\nimport { logOrRegisterCustomer, registerCustomer } from \"../../api/userApi\";\nimport { GoogleLogin } from \"react-google-login\";\nimport configData from \"../../config/config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegistrationForm(props) {\n  _s();\n\n  const {\n    initialValues,\n    validationSchema,\n    onSubmit\n  } = props;\n  const dispatch = useDispatch();\n  const responseSuccessGoogle = useCallback(async response => {\n    try {\n      let customer = await logOrRegisterCustomer(response);\n\n      if (customer.message) {\n        dispatch(setErors(customer.message));\n      } else {\n        dispatch(setCustomer(customer));\n      }\n    } catch (error) {\n      dispatch(setErors(error.response));\n    }\n  }, [dispatch]);\n  const responseErrorGoogle = useCallback(async response => {\n    dispatch(setErors(response.message));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: formik => {\n      return (\n        /*#__PURE__*/\n        // <div className=\"form__wrapper\">\n        // <h1>Registration form</h1>\n        _jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"text\",\n            label: \"Please, enter your first name\",\n            name: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"text\",\n            label: \"Please, enter your last name\",\n            name: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"text\",\n            label: \"Please, enter your login\",\n            name: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"email\",\n            label: \"Email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"password\",\n            label: \"Password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"password\",\n            label: \"Confirm Password\",\n            name: \"confirmPassword\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form__btn\",\n            type: \"submit\",\n            disabled: !formik.isValid,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            clientId: configData.REACT_APP_GOOGLE_CLIENT_ID,\n            buttonText: \"Login\",\n            onSuccess: responseSuccessGoogle,\n            onFailure: responseErrorGoogle,\n            cookiePolicy: \"single_host_origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form__btn\",\n            type: \"button\",\n            onClick: () => {\n              dispatch(removeCustomer());\n            },\n            children: \"LOGOUT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this) // </div>\n\n      );\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegistrationForm, \"8ORvkaS1OXtn+j0Fw97zdTc+MaA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/components/form/RegistrationForm.jsx"],"names":["React","useCallback","Formik","Form","FormikControl","form","useDispatch","setCustomer","removeCustomer","setErors","clearErrors","logOrRegisterCustomer","registerCustomer","GoogleLogin","configData","RegistrationForm","props","initialValues","validationSchema","onSubmit","dispatch","responseSuccessGoogle","response","customer","message","error","responseErrorGoogle","formik","isValid","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":"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","sourcesContent":["import React, { useCallback }  from 'react'\nimport { Formik, Form } from 'formik'\nimport FormikControl from './FormikControl'\nimport form from \"./form.scss\"\nimport { useDispatch } from \"react-redux\";\nimport { setCustomer, removeCustomer } from \"../../store/customer/reducer\";\nimport { setErors, clearErrors } from \"../../store/errors/reducer\";\nimport { logOrRegisterCustomer, registerCustomer } from \"../../api/userApi\";\nimport { GoogleLogin } from \"react-google-login\";\nimport configData from \"../../config/config.json\";\n\nfunction RegistrationForm(props) {\n  const { initialValues, validationSchema, onSubmit } = props;\n\n  const dispatch = useDispatch();\n\n  const responseSuccessGoogle = useCallback(\n    async (response) => {\n        try {\n            let customer = await logOrRegisterCustomer(response);\n            if (customer.message) {\n                dispatch(setErors(customer.message));\n            } else {\n                dispatch(setCustomer(customer));\n            }\n        } catch (error) {\n            dispatch(setErors(error.response));\n        }\n    },\n    [dispatch]\n);\nconst responseErrorGoogle = useCallback(\n    async (response) => {\n        dispatch(setErors(response.message));\n    },\n    [dispatch]\n);\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {formik => {\n        return (\n          // <div className=\"form__wrapper\">\n          // <h1>Registration form</h1>\n          <Form>\n            <FormikControl\n              control='input'\n              type='text'\n              label='Please, enter your first name'\n              name='firstName'\n            />\n            <FormikControl\n              control='input'\n              type='text'\n              label='Please, enter your last name'\n              name='lastName'\n            />\n            <FormikControl\n              control='input'\n              type='text'\n              label='Please, enter your login'\n              name='login'\n            />\n            <FormikControl\n              control='input'\n              type='email'\n              label='Email'\n              name='email'\n            />\n            <FormikControl\n              control='input'\n              type='password'\n              label='Password'\n              name='password'\n            />\n            <FormikControl\n              control='input'\n              type='password'\n              label='Confirm Password'\n              name='confirmPassword'\n            />\n            <button className=\"form__btn\" type='submit' disabled={!formik.isValid}>\n              Submit\n            </button>\n            <GoogleLogin\n              clientId={configData.REACT_APP_GOOGLE_CLIENT_ID}\n              buttonText=\"Login\"\n              onSuccess={responseSuccessGoogle}\n              onFailure={responseErrorGoogle}\n              cookiePolicy={\"single_host_origin\"}\n            />\n              <button\n                    className=\"form__btn\"\n                    type=\"button\"\n                    onClick={() => {\n                        dispatch(removeCustomer());\n                    }}\n                >\n                    LOGOUT\n                </button>\n          </Form>\n          // </div>\n        )\n      }}\n    </Formik>\n  )\n}\n\nexport default RegistrationForm"]},"metadata":{},"sourceType":"module"}