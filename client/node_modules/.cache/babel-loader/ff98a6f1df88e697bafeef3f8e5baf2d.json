{"ast":null,"code":"var _jsxFileName = \"/home/tirion/Desktop/Final_project/client/src/pages/LoginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logOrRegisterCustomer, loginCustomer } from \"../../api/userApi\";\nimport { setErors, clearErrors } from \"../../store/errors/reducer\";\nimport { setCustomer } from \"../../store/customer/reducer\";\nimport { GoogleLogin } from \"react-google-login\";\nimport configData from \"../../config/config.json\";\nimport { LoginSchema } from \"../../components/forms/components/formValidation\";\nimport { customerName, errorloginOrEmail } from \"../../store/selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const store = useSelector(state => state);\n  const singIn = useCallback(async values => {\n    try {\n      let customer = await loginCustomer(values);\n\n      if (customer.loginOrEmail) {\n        dispatch(setErors(customer));\n      } else {\n        dispatch(setCustomer(customer));\n        dispatch(clearErrors());\n      }\n    } catch (error) {\n      dispatch(setErors(error.response));\n    }\n  }, [dispatch]);\n  const responseSuccessGoogle = useCallback(async response => {\n    try {\n      let customer = await logOrRegisterCustomer(response);\n\n      if (customer.message) {\n        dispatch(setErors(customer.message));\n      } else {\n        dispatch(setCustomer(customer));\n      }\n    } catch (error) {\n      dispatch(setErors(error.response));\n    }\n  }, [dispatch]);\n  const responseErrorGoogle = useCallback(async response => {\n    dispatch(setErors(response.message));\n  }, [dispatch]); // const formik = useFormik({\n  //   initialValues: {\n  //     loginOrEmail: \"\",\n  //     password: \"\",\n  //   },\n  //   validationSchema: LoginSchema,\n  //   onSubmit: (values) => {\n  //     singIn(values);\n  //   },\n  // });\n\n  const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n  const validationSchema = LoginSchema;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loginOrEmail\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"loginOrEmail\",\n          type: \"email\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.loginOrEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), formik.touched.loginOrEmail && formik.errors.loginOrEmail ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.loginOrEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          value: formik.values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: formik.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: configData.REACT_APP_GOOGLE_CLIENT_ID,\n        buttonText: \"Login\",\n        onSuccess: responseSuccessGoogle,\n        onFailure: responseErrorGoogle,\n        cookiePolicy: \"single_host_origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Welcome back \", customerName(store)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: errorloginOrEmail(store)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"VZnA7oDnOBI+nlveGSwfl5QFjI4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/pages/LoginPage/LoginPage.jsx"],"names":["React","useCallback","useFormik","useDispatch","useSelector","logOrRegisterCustomer","loginCustomer","setErors","clearErrors","setCustomer","GoogleLogin","configData","LoginSchema","customerName","errorloginOrEmail","LoginPage","dispatch","store","state","singIn","values","customer","loginOrEmail","error","response","responseSuccessGoogle","message","responseErrorGoogle","initialValues","email","password","confirmPassword","validationSchema","formik","handleSubmit","handleChange","handleBlur","touched","errors","REACT_APP_GOOGLE_CLIENT_ID"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logOrRegisterCustomer, loginCustomer } from \"../../api/userApi\";\nimport { setErors, clearErrors } from \"../../store/errors/reducer\";\nimport { setCustomer } from \"../../store/customer/reducer\";\nimport { GoogleLogin } from \"react-google-login\";\nimport configData from \"../../config/config.json\";\nimport { LoginSchema } from \"../../components/forms/components/formValidation\";\nimport { customerName, errorloginOrEmail } from \"../../store/selectors\";\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  const singIn = useCallback(\n    async (values) => {\n      try {\n        let customer = await loginCustomer(values);\n        if (customer.loginOrEmail) {\n          dispatch(setErors(customer));\n        } else {\n          dispatch(setCustomer(customer));\n          dispatch(clearErrors());\n        }\n      } catch (error) {\n        dispatch(setErors(error.response));\n      }\n    },\n    [dispatch]\n  );\n\n  const responseSuccessGoogle = useCallback(\n    async (response) => {\n      try {\n        let customer = await logOrRegisterCustomer(response);\n        if (customer.message) {\n          dispatch(setErors(customer.message));\n        } else {\n          dispatch(setCustomer(customer));\n        }\n      } catch (error) {\n        dispatch(setErors(error.response));\n      }\n    },\n    [dispatch]\n  );\n\n  const responseErrorGoogle = useCallback(\n    async (response) => {\n      dispatch(setErors(response.message));\n    },\n    [dispatch]\n  );\n  // const formik = useFormik({\n  //   initialValues: {\n  //     loginOrEmail: \"\",\n  //     password: \"\",\n  //   },\n  //   validationSchema: LoginSchema,\n  //   onSubmit: (values) => {\n  //     singIn(values);\n  //   },\n  // });\n\n   const initialValues = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n  }\n\n  const validationSchema = LoginSchema;\n\n  return (\n    <div>\n      <h1>LOGIN</h1>\n      <div className=\"Form\">\n        <form onSubmit={formik.handleSubmit}>\n          <label htmlFor=\"loginOrEmail\">Email Address</label>\n          <input\n            id=\"email\"\n            name=\"loginOrEmail\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.loginOrEmail}\n          />\n          {formik.touched.loginOrEmail && formik.errors.loginOrEmail ? (\n            <div>{formik.errors.loginOrEmail}</div>\n          ) : null}\n          <label htmlFor=\"password\">Password</label>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n          />\n          {formik.touched.password && formik.errors.password ? (\n            <div>{formik.errors.password}</div>\n          ) : null}\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n      <div>\n        <GoogleLogin\n          clientId={configData.REACT_APP_GOOGLE_CLIENT_ID}\n          buttonText=\"Login\"\n          onSuccess={responseSuccessGoogle}\n          onFailure={responseErrorGoogle}\n          cookiePolicy={\"single_host_origin\"}\n        />\n      </div>\n      <h2> Welcome back {customerName(store)}</h2>\n      <h2>{errorloginOrEmail(store)}</h2>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}