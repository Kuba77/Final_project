{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cart/reducer\";\nimport favoriteReducer from \"./favorites/reducer\";\nimport customerReducer from \"./customer/reducer\";\nimport errorsReducer from \"./errors/reducer\";\n\nfunction syncWithLocalStorage(_ref) {\n  let {\n    getState\n  } = _ref;\n  return next => action => {\n    const updatedAction = next(action);\n    localStorage.setItem(\"redux\", JSON.stringify(getState()));\n    return updatedAction;\n  };\n}\n\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer,\n    favorites: favoriteReducer,\n    customer: customerReducer,\n    errors: errorsReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(syncWithLocalStorage)\n});","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/store/index.js"],"names":["configureStore","cartReducer","favoriteReducer","customerReducer","errorsReducer","syncWithLocalStorage","getState","next","action","updatedAction","localStorage","setItem","JSON","stringify","store","reducer","cart","favorites","customer","errors","middleware","getDefaultMiddleware","concat"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,SAASC,oBAAT,OAA4C;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,SAAQC,IAAD,IAAWC,MAAD,IAAY;AAC3B,UAAMC,aAAa,GAAGF,IAAI,CAACC,MAAD,CAA1B;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeP,QAAQ,EAAvB,CAA9B;AACA,WAAOG,aAAP;AACD,GAJD;AAKD;;AAED,OAAO,MAAMK,KAAK,GAAGd,cAAc,CAAC;AAClCe,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEf,WADC;AAEPgB,IAAAA,SAAS,EAAEf,eAFJ;AAGPgB,IAAAA,QAAQ,EAAEf,eAHH;AAIPgB,IAAAA,MAAM,EAAEf;AAJD,GADyB;AAOlCgB,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,GAAGC,MAAvB,CAA8BjB,oBAA9B;AARgC,CAAD,CAA5B","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cart/reducer\";\nimport favoriteReducer from \"./favorites/reducer\";\nimport customerReducer from \"./customer/reducer\";\nimport errorsReducer from \"./errors/reducer\";\n\nfunction syncWithLocalStorage({ getState }) {\n  return (next) => (action) => {\n    const updatedAction = next(action);\n    localStorage.setItem(\"redux\", JSON.stringify(getState()));\n    return updatedAction;\n  };\n}\n\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer,\n    favorites: favoriteReducer,\n    customer: customerReducer,\n    errors: errorsReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(syncWithLocalStorage),\n});\n"]},"metadata":{},"sourceType":"module"}