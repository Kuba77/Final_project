{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = [];\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setItemInCart: (state, action) => {\n      state.itemsInCart.push(action.payload);\n    },\n    deleteItemFromCart: (state, action) => {\n      state.itemsInCart = state.itemsInCart.filter(book => book.id !== action.payload);\n    },\n    clearCart: state => {\n      state.itemsInCart = state.itemsInCart = [];\n    }\n  }\n});\nexport const {\n  setItemInCart,\n  deleteItemFromCart,\n  clearCart\n} = cartSlice.actions;\nexport const selectCart = state => state.itemsInCart.book;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/store/cart/reducer.js"],"names":["createSlice","initialState","cartSlice","name","reducers","setItemInCart","state","action","itemsInCart","push","payload","deleteItemFromCart","filter","book","id","clearCart","actions","selectCart","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BF,EAAAA,YAF4B;AAG5BG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuBF,MAAM,CAACG,OAA9B;AACD,KAHO;AAIRC,IAAAA,kBAAkB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,CAAkBI,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAApD,CAApB;AACD,KANO;AAORK,IAAAA,SAAS,EAAGT,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,GAAoB,EAAxC;AACD;AATO;AAHkB,CAAD,CAA7B;AAgBA,OAAO,MAAM;AAAEH,EAAAA,aAAF;AAAiBM,EAAAA,kBAAjB;AAAqCI,EAAAA;AAArC,IAAkDb,SAAS,CAACc,OAAlE;AACP,OAAO,MAAMC,UAAU,GAAGX,KAAK,IAAIA,KAAK,CAACE,WAAN,CAAkBK,IAA9C;AACP,eAAeX,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nconst initialState = []\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    setItemInCart: (state, action) => {\n      state.itemsInCart.push(action.payload)\n    },\n    deleteItemFromCart: (state, action) => {\n      state.itemsInCart = state.itemsInCart.filter(book => book.id !== action.payload)\n    },\n    clearCart: (state) => {\n      state.itemsInCart = state.itemsInCart = []\n    }\n  }\n});\n\nexport const { setItemInCart, deleteItemFromCart, clearCart} = cartSlice.actions;\nexport const selectCart = state => state.itemsInCart.book\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}