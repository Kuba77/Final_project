{"ast":null,"code":"var _jsxFileName = \"/home/tirion/Desktop/Final_project/client/src/components/form/SighnUpForm.jsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField } from 'formik';\nimport * as Yup from 'yup';\nimport TextError from './TextError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: '',\n  email: '',\n  channel: '',\n  comments: '',\n  address: '',\n  social: {\n    facebook: '',\n    twitter: ''\n  },\n  phoneNumbers: ['', ''],\n  phNumbers: ['']\n};\n\nconst onSubmit = values => {\n  console.log('Form data', values);\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Required!'),\n  email: Yup.string().email('Invalid email format').required('Required'),\n  channel: Yup.string().required('Required')\n});\n\nfunction SighnUpForm() {\n  // console.log('Visited fields', formik.touched)\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"name\",\n            component: TextError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"email\",\n            children: errorMsg => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errorMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"channel\",\n            children: \"Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"channel\",\n            name: \"channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"comments\",\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: \"textarea\",\n            id: \"comments\",\n            name: \"comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"address\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FastField, {\n            name: \"address\",\n            children: props => {\n              console.log('Field render');\n              const {\n                field,\n                form,\n                meta\n              } = props; // console.log('Render props', props)\n\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"address\",\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: meta.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 71\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 41\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"facebook\",\n            children: \"Facebook profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"facebook\",\n            name: \"social.facebook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"twitter\",\n            children: \"Twitter profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"twitter\",\n            name: \"social.twitter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"primaryPh\",\n            children: \"Primary phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"primaryPh\",\n            name: \"phoneNumbers[0]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"secondaryPh\",\n            children: \"Secondary phone number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"secondaryPh\",\n            name: \"phoneNumbers[1]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"List of phone numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FieldArray, {\n            name: \"phNumbers\",\n            children: fieldArrayProps => {\n              // console.log('fieldArrayProps', fieldArrayProps)\n              const {\n                push,\n                remove,\n                form\n              } = fieldArrayProps;\n              const {\n                values\n              } = form;\n              const {\n                phNumbers\n              } = values;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: phNumbers.map((phNumber, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: `phNumbers[${index}]`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 48\n                  }, this), index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => remove(index),\n                    children: \" - \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 52\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => push(''),\n                    children: \" + \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 48\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 44\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 40\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"form__btn\",\n          onClick: () => formik.validateField('comments'),\n          children: \"Validate comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"form__btn\",\n          onClick: () => formik.validateForm(),\n          children: \"Validate all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"form__btn\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \") } }\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SighnUpForm;\nexport default SighnUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SighnUpForm\");","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/components/form/SighnUpForm.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","FieldArray","FastField","Yup","TextError","initialValues","name","email","channel","comments","address","social","facebook","twitter","phoneNumbers","phNumbers","onSubmit","values","console","log","validationSchema","object","string","required","SighnUpForm","errorMsg","props","field","form","meta","touched","error","fieldArrayProps","push","remove","map","phNumber","index","formik","validateField","validateForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,EAA4CC,UAA5C,EAAwDC,SAAxD,QAAwE,QAAxE;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,OAAO,EAAE,EAHS;AAIlBC,EAAAA,QAAQ,EAAE,EAJQ;AAKlBC,EAAAA,OAAO,EAAE,EALS;AAMlBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,OAAO,EAAE;AAFL,GANU;AAUlBC,EAAAA,YAAY,EAAE,CAAC,EAAD,EAAK,EAAL,CAVI;AAWlBC,EAAAA,SAAS,EAAE,CAAC,EAAD;AAXO,CAAtB;;AAcA,MAAMC,QAAQ,GAAGC,MAAM,IAAI;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACH,CAFD;;AAKA,MAAMG,gBAAgB,GAAGjB,GAAG,CAACkB,MAAJ,CAAW;AAChCf,EAAAA,IAAI,EAAEH,GAAG,CAACmB,MAAJ,GAAaC,QAAb,CAAsB,WAAtB,CAD0B;AAEhChB,EAAAA,KAAK,EAAEJ,GAAG,CAACmB,MAAJ,GAAaf,KAAb,CAAmB,sBAAnB,EAA2CgB,QAA3C,CAAoD,UAApD,CAFyB;AAGhCf,EAAAA,OAAO,EAAEL,GAAG,CAACmB,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;AAHuB,CAAX,CAAzB;;AAOC,SAASC,WAAT,GAAuB;AAEpB;AAEA,sBACI,QAAC,MAAD;AAAQ,IAAA,aAAa,EAAEnB,aAAvB;AAAsC,IAAA,gBAAgB,EAAEe,gBAAxD;AAA0E,IAAA,QAAQ,EAAEJ,QAApF;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACA,QAAC,IAAD;AAAA,gCACgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,MAAtB;AAA6B,YAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,MAAnB;AAA0B,YAAA,SAAS,EAAEZ;AAArC;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADhB,eAOgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,EAAE,EAAC,OAAvB;AAA+B,YAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,OAAnB;AAAA,sBAESqB,QAAD,iBAAc;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,wBAAwBA;AAAxB;AAAA;AAAA;AAAA;AAAA;AAFtB;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPhB,eAiBgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,SAAtB;AAAgC,YAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBhB,eAuBgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,EAAE,EAAC,UAAV;AAAqB,YAAA,EAAE,EAAC,UAAxB;AAAmC,YAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvBhB,eA4BgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,SAAD;AAAW,YAAA,IAAI,EAAC,SAAhB;AAAA,sBACMC,KAAD,IAAW;AACJR,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,oBAAM;AAACQ,gBAAAA,KAAD;AAAQC,gBAAAA,IAAR;AAAcC,gBAAAA;AAAd,kBAAsBH,KAA5B,CAFI,CAGJ;;AACA,kCACI;AAAA,wCACA;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,EAAE,EAAC,SAAtB;AAAA,qBAAoCC;AAApC;AAAA;AAAA;AAAA;AAAA,wBADA,EAECE,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,gBAA6B;AAAA,4BAAMF,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,wBAA7B,GAAuD,IAFxD;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAMH;AAXT;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BhB,eA+CgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,UAAtB;AAAiC,YAAA,IAAI,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/ChB,eAoDgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,SAAtB;AAAgC,YAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDhB,eA0DgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,WAAtB;AAAkC,YAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1DhB,eA+DgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,aAAtB;AAAoC,YAAA,IAAI,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/DhB,eAqEgB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,WAAjB;AAAA,sBAESC,eAAD,IAAqB;AACrB;AACA,oBAAM;AAACC,gBAAAA,IAAD;AAAOC,gBAAAA,MAAP;AAAeN,gBAAAA;AAAf,kBAAuBI,eAA7B;AACA,oBAAM;AAACf,gBAAAA;AAAD,kBAAWW,IAAjB;AACA,oBAAM;AAACb,gBAAAA;AAAD,kBAAcE,MAApB;AACA,kCAAO;AAAA,0BAECF,SAAS,CAACoB,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,kBACX;AAAA,0CACI,QAAC,KAAD;AAAO,oBAAA,IAAI,EAAG,aAAYA,KAAM;AAAhC;AAAA;AAAA;AAAA;AAAA,0BADJ,EAGQA,KAAK,GAAG,CAAR,iBACA;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,OAAO,EAAE,MAAMH,MAAM,CAACG,KAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJR,eAOI;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,OAAO,EAAE,MAAMJ,IAAI,CAAC,EAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ;AAAA,mBAAUI,KAAV;AAAA;AAAA;AAAA;AAAA,wBADH;AAFD;AAAA;AAAA;AAAA;AAAA,sBAAP;AAeC;AAtBT;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArEhB,eAiGgB;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,WAAhC;AAA4C,UAAA,OAAO,EAAE,MAAMC,MAAM,CAACC,aAAP,CAAqB,UAArB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjGhB,eAkGgB;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,WAAhC;AAA4C,UAAA,OAAO,EAAE,MAAMD,MAAM,CAACE,YAAP,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlGhB,eAsGgB;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtGhB;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmOH;;KAvOShB,W;AAyOV,eAAeA,WAAf","sourcesContent":["import React from 'react'\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField} from 'formik';\nimport * as Yup from 'yup'\nimport TextError from './TextError';\n\nconst initialValues = {\n    name: '',\n    email: '',\n    channel: '',\n    comments: '',\n    address: '',\n    social: {\n        facebook: '',\n        twitter: ''\n    },\n    phoneNumbers: ['', ''],\n    phNumbers: ['']\n};\n\nconst onSubmit = values => {\n    console.log('Form data', values)\n};\n\n\nconst validationSchema = Yup.object({\n    name: Yup.string().required('Required!'),\n    email: Yup.string().email('Invalid email format').required('Required'),\n    channel: Yup.string().required('Required')\n})\n\n\n function SighnUpForm() {\n\n    // console.log('Visited fields', formik.touched)\n\n    return(\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\n        <div className=\"form__wrapper\">\n        <Form>\n                        <div className=\"form__control\">\n                        <label htmlFor=\"name\">Name</label>\n                        <Field type=\"text\" id=\"name\" name=\"name\" />\n                        <ErrorMessage name=\"name\" component={TextError}/>\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"email\">E-mail</label>\n                        <Field type=\"email\" id=\"email\" name=\"email\" />\n                        <ErrorMessage name=\"email\">\n                            {\n                                (errorMsg) => <div className=\"error\">{errorMsg}</div>\n                            }\n                        </ErrorMessage>\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"channel\">Channel</label>\n                        <Field type=\"text\" id=\"channel\" name=\"channel\" />\n                        <ErrorMessage name=\"channel\" />\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"comments\">Comments</label>\n                        <Field as=\"textarea\" id=\"comments\" name=\"comments\" />\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"address\">Address</label>\n                        <FastField name=\"address\">\n                            {(props) => {\n                                    console.log('Field render')\n                                    const {field, form, meta} = props\n                                    // console.log('Render props', props)\n                                    return(\n                                        <div>\n                                        <input type=\"text\" id=\"address\" {...field}/>\n                                        {meta.touched && meta.error ? <div>{meta.error}</div> : null}\n                                        </div>\n                                    )\n                                }\n                            }\n                        </FastField>\n                        </div>\n        \n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"facebook\">Facebook profile</label>\n                        <Field type=\"text\" id=\"facebook\" name=\"social.facebook\" />\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"twitter\">Twitter profile</label>\n                        <Field type=\"text\" id=\"twitter\" name=\"social.twitter\" />\n                        </div>\n        \n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"primaryPh\">Primary phone number</label>\n                        <Field type=\"text\" id=\"primaryPh\" name=\"phoneNumbers[0]\" />\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"secondaryPh\">Secondary phone number</label>\n                        <Field type=\"text\" id=\"secondaryPh\" name=\"phoneNumbers[1]\" />\n                        </div>\n                        \n        \n                        <div className=\"form__control\">\n                        <label>List of phone numbers</label>\n                        <FieldArray name=\"phNumbers\">\n                            {\n                                (fieldArrayProps) => {\n                                // console.log('fieldArrayProps', fieldArrayProps)\n                                const {push, remove, form} = fieldArrayProps\n                                const {values} = form\n                                const {phNumbers} = values\n                                return <div>\n                                    {\n                                        phNumbers.map((phNumber, index) => (\n                                           <div key={index}>\n                                               <Field name={`phNumbers[${index}]`}/>\n                                               {\n                                                   index > 0 &&\n                                                   <button type=\"button\" onClick={() => remove(index)}> - </button>\n                                               }\n                                               \n                                               <button type=\"button\" onClick={() => push('')}> + </button>\n                                           </div> \n                                        ))\n                                    }\n                                </div>\n                                }\n                            }\n                        </FieldArray>\n                        </div>\n                        <button type=\"button\" className=\"form__btn\" onClick={() => formik.validateField('comments')}>Validate comments</button>\n                        <button type=\"button\" className=\"form__btn\" onClick={() => formik.validateForm()}>Validate all</button>\n\n                      \n\n                        <button type=\"submit\" className=\"form__btn\">Submit</button>\n                    </Form>\n            {/* {\n                formik =>{\n                    return (\n                        <Form>\n                        <div className=\"form__control\">\n                        <label htmlFor=\"name\">Name</label>\n                        <Field type=\"text\" id=\"name\" name=\"name\" />\n                        <ErrorMessage name=\"name\" component={TextError}/>\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"email\">E-mail</label>\n                        <Field type=\"email\" id=\"email\" name=\"email\" />\n                        <ErrorMessage name=\"email\">\n                            {\n                                (errorMsg) => <div className=\"error\">{errorMsg}</div>\n                            }\n                        </ErrorMessage>\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"channel\">Channel</label>\n                        <Field type=\"text\" id=\"channel\" name=\"channel\" />\n                        <ErrorMessage name=\"channel\" />\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"comments\">Comments</label>\n                        <Field as=\"textarea\" id=\"comments\" name=\"comments\" />\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"address\">Address</label>\n                        <FastField name=\"address\">\n                            {(props) => {\n                                    console.log('Field render')\n                                    const {field, form, meta} = props\n                                    // console.log('Render props', props)\n                                    return(\n                                        <div>\n                                        <input type=\"text\" id=\"address\" {...field}/>\n                                        {meta.touched && meta.error ? <div>{meta.error}</div> : null}\n                                        </div>\n                                    )\n                                }\n                            }\n                        </FastField>\n                        </div>\n        \n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"facebook\">Facebook profile</label>\n                        <Field type=\"text\" id=\"facebook\" name=\"social.facebook\" />\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"twitter\">Twitter profile</label>\n                        <Field type=\"text\" id=\"twitter\" name=\"social.twitter\" />\n                        </div>\n        \n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"primaryPh\">Primary phone number</label>\n                        <Field type=\"text\" id=\"primaryPh\" name=\"phoneNumbers[0]\" />\n                        </div>\n        \n                        <div className=\"form__control\">\n                        <label htmlFor=\"secondaryPh\">Secondary phone number</label>\n                        <Field type=\"text\" id=\"secondaryPh\" name=\"phoneNumbers[1]\" />\n                        </div>\n                        \n        \n                        <div className=\"form__control\">\n                        <label>List of phone numbers</label>\n                        <FieldArray name=\"phNumbers\">\n                            {\n                                (fieldArrayProps) => {\n                                // console.log('fieldArrayProps', fieldArrayProps)\n                                const {push, remove, form} = fieldArrayProps\n                                const {values} = form\n                                const {phNumbers} = values\n                                return <div>\n                                    {\n                                        phNumbers.map((phNumber, index) => (\n                                           <div key={index}>\n                                               <Field name={`phNumbers[${index}]`}/>\n                                               {\n                                                   index > 0 &&\n                                                   <button type=\"button\" onClick={() => remove(index)}> - </button>\n                                               }\n                                               \n                                               <button type=\"button\" onClick={() => push('')}> + </button>\n                                           </div> \n                                        ))\n                                    }\n                                </div>\n                                }\n                            }\n                        </FieldArray>\n                        </div>\n                        <button type=\"button\" className=\"form__btn\" onClick={() => formik.validateField('comments')}>Validate comments</button>\n                        <button type=\"button\" className=\"form__btn\" onClick={() => formik.validateForm()}>Validate all</button>\n\n                        <button type=\"button\" className=\"form__btn\" onClick={() => formik.setFieldTouched('comments')}>Visit comments</button>\n                        <button type=\"button\" className=\"form__btn\" onClick={() => formik.setTouched({\n                            name: true,\n                            email: true,\n                            channel: true,\n                            comments: true\n                        })}>Visit all</button>\n\n                        <button type=\"submit\" className=\"form__btn\">Submit</button>\n                    </Form> */}\n                    )\n                }\n            }\n        </div>\n        </Formik>\n)\n    \n}\n\nexport default SighnUpForm"]},"metadata":{},"sourceType":"module"}