{"ast":null,"code":"var _jsxFileName = \"/home/tirion/Desktop/Final_project/client/src/components/form/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Formik, Form } from 'formik';\nimport { Link } from \"react-router-dom\";\nimport FormikControl from './FormikControl';\nimport classes from \"./Form.module.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { setCustomer } from \"../../store/customer/reducer\";\nimport { setErors } from \"../../store/errors/reducer\";\nimport { logOrRegisterCustomer } from \"../../api/userApi\";\nimport { GoogleLogin } from \"react-google-login\";\nimport configData from \"../../config/config.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(props) {\n  _s();\n\n  const {\n    initialValues,\n    validationSchema,\n    onSubmit,\n    disabled\n  } = props;\n  const dispatch = useDispatch();\n  const responseSuccessGoogle = useCallback(async response => {\n    try {\n      let customer = await logOrRegisterCustomer(response);\n\n      if (customer.message) {\n        dispatch(setErors(customer.message));\n      } else {\n        dispatch(setCustomer(customer));\n      }\n    } catch (error) {\n      dispatch(setErors(error.response));\n    }\n  }, [dispatch]);\n  const responseErrorGoogle = useCallback(async response => {\n    dispatch(setErors(response.message));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    children: formik => {\n      console.log('Formik props', formik);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form__wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"email\",\n            label: \"Email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormikControl, {\n            control: \"input\",\n            type: \"password\",\n            label: \"Password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.button__wrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.form__btn,\n              type: \"submit\",\n              disabled: !formik.isValid,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              clientId: configData.REACT_APP_GOOGLE_CLIENT_ID,\n              buttonText: \"Login with google\",\n              onSuccess: responseSuccessGoogle,\n              onFailure: responseErrorGoogle,\n              cookiePolicy: \"single_host_origin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: classes.form__link,\n              to: \"/registration\",\n              children: \"Go to register page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"8ORvkaS1OXtn+j0Fw97zdTc+MaA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/tirion/Desktop/Final_project/client/src/components/form/LoginForm.jsx"],"names":["React","useCallback","Formik","Form","Link","FormikControl","classes","useDispatch","setCustomer","setErors","logOrRegisterCustomer","GoogleLogin","configData","LoginForm","props","initialValues","validationSchema","onSubmit","disabled","dispatch","responseSuccessGoogle","response","customer","message","error","responseErrorGoogle","formik","console","log","form__wrapper","button__wrapper","form__btn","isValid","REACT_APP_GOOGLE_CLIENT_ID","form__link"],"mappings":"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","sourcesContent":["import React, {useCallback} from 'react'\nimport { Formik, Form } from 'formik'\nimport { Link } from \"react-router-dom\";\nimport FormikControl from './FormikControl'\nimport classes from \"./Form.module.scss\"\nimport { useDispatch } from \"react-redux\";\nimport { setCustomer} from \"../../store/customer/reducer\";\nimport { setErors} from \"../../store/errors/reducer\";\nimport { logOrRegisterCustomer} from \"../../api/userApi\";\nimport { GoogleLogin } from \"react-google-login\";\nimport configData from \"../../config/config.json\";\n\n\nfunction LoginForm(props) {\n\n  const { initialValues, validationSchema, onSubmit, disabled } = props;\n\n  const dispatch = useDispatch();\n\n  const responseSuccessGoogle = useCallback(\n    async (response) => {\n      try {\n        let customer = await logOrRegisterCustomer(response);\n        if (customer.message) {\n          dispatch(setErors(customer.message));\n        } else {\n          dispatch(setCustomer(customer));\n        }\n      } catch (error) {\n        dispatch(setErors(error.response));\n      }\n    },\n    [dispatch]\n  );\n  const responseErrorGoogle = useCallback(\n    async (response) => {\n      dispatch(setErors(response.message));\n    },\n    [dispatch]\n  );\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {formik => {\n        console.log('Formik props', formik)\n        return (\n          <div className={classes.form__wrapper}>\n            <h1>Login form</h1>\n            <Form>\n              <FormikControl\n                control='input'\n                type='email'\n                label='Email'\n                name='email'\n              />\n              <FormikControl\n                control='input'\n                type='password'\n                label='Password'\n                name='password'\n              />\n              <div className={classes.button__wrapper}>\n                <button className={classes.form__btn} type='submit' disabled={!formik.isValid}>\n                  Submit\n                </button>\n                <GoogleLogin\n                  clientId={configData.REACT_APP_GOOGLE_CLIENT_ID}\n                  buttonText=\"Login with google\"\n                  onSuccess={responseSuccessGoogle}\n                  onFailure={responseErrorGoogle}\n                  cookiePolicy={\"single_host_origin\"}\n                />\n                  <Link className={classes.form__link} to=\"/registration\">Go to register page</Link>\n              </div>\n            </Form>\n          </div>\n        )\n      }}\n    </Formik>\n  )\n\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}